---
name: unit-tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  actions: none
  checks: none
  contents: read
  deployments: none
  discussions: none
  id-token: none
  issues: none
  packages: none
  pages: none
  pull-requests: none
  repository-projects: none
  security-events: none
  statuses: none

jobs:
  test-cpython:
    name: unit-tests (${{ matrix.os }}, Python-CPython ${{ matrix.python_version }})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        include:
          #########
          # Linux #
          #########
          - os: ubuntu-latest
            python_version: &oldest_python '3.9'
          - os: ubuntu-latest
            python_version: '3.11'
          - os: ubuntu-latest
            python_version: '3.12'
          - os: ubuntu-latest
            python_version: '3.13'
          - os: ubuntu-latest
            python_version: &latest_python '3.14'
          #########
          # macOS #
          #########
          - os: macOS-13
            python_version: *oldest_python
          - os: macOS-latest
            python_version: *latest_python
          ###########
          # Windows #
          ###########
          - os: windows-latest
            python_version: *oldest_python
          - os: windows-latest
            python_version: *latest_python
    steps:
      - name: Prevent conversion of line endings on Windows
        if: startsWith(matrix.os, 'windows')
        shell: pwsh
        run: git config --global core.autocrlf false
      - name: check out repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 1
          persist-credentials: false
      - uses: conda-incubator/setup-miniconda@835234971496cad1653abb28a638a281cf32541f # v3.1.0
        with:
          activate-environment: pydistcheck-tests
          miniforge-version: latest
          python-version: ${{ matrix.python_version }}
      - name: Install extra tools on Linux
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update -y
          sudo apt-get install -y \
            llvm
      - name: Install extra tools on Windows
        if: startsWith(matrix.os, 'windows')
        run: |
          choco install zip
      - name: build and check dists
        shell: bash -l {0}
        run: |
          pip install -r ./requirements-tests.txt
          make build check-dists
      - name: install
        shell: bash -l {0}
        run: |
          pip install dist/*.whl
      - name: test
        shell: bash -l {0}
        run: |
          make test
  test-pypy:
    name: unit-tests (${{ matrix.os }}, Python-PyPy ${{ matrix.python_version }})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        include:
          # available versions:
          # https://github.com/actions/setup-python/blob/main/docs/advanced-usage.md#available-versions-of-python-pypy-and-graalpy
          - os: ubuntu-latest
            python_version: '3.11'
    steps:
      - name: check out repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 1
          persist-credentials: false
      - uses: actions/setup-python@v6
        with:
          python-version: 'pypy${{ matrix.python_version}}'
      - name: Install extra tools on Linux
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update -y
          sudo apt-get install -y \
            llvm
      - name: build and check dists
        shell: bash -l {0}
        run: |
          pip install -r ./requirements-tests.txt
          make build check-dists
      - name: install
        shell: bash -l {0}
        run: |
          pip install dist/*.whl
      - name: test
        shell: bash -l {0}
        run: |
          make test
  check-test-packages:
    name: check-test-packages (${{ matrix.os }}, Python ${{ matrix.python_version }})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            python_version: '3.12'
          - os: macOS-13
            python_version: '3.11'
    steps:
      - name: check out repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 1
          persist-credentials: false
      - uses: actions/setup-python@v6
        with:
          python-version: "${{ matrix.python_version}}"
      - name: run tests
        run: |
          bin/check-test-packages.sh ${GITHUB_WORKSPACE}/tests/data
  all-unit-tests-successful:
    if: always()
    runs-on: ubuntu-latest
    needs:
      - test-cpython
      - test-pypy
      - check-test-packages
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@05ac9388f0aebcb5727afa17fcccfecd6f8ec5fe # v1.2.2
        with:
          jobs: ${{ toJSON(needs) }}
