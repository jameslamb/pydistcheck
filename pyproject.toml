[project]

authors = [
  {name = "James Lamb", email = "jaylamb20@gmail.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Operating System :: MacOS",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Software Development",
    "Topic :: Utilities"
]
dependencies = [
    "click",
    "tomli ; python_version < '3.11'"
]
description = "Inspect Python package distributions and raise warnings on common problems."
keywords = [
    "linter",
    "python-packaging",
    "testing"
]
license = {file = "LICENSE"}
maintainers = [
  {name = "James Lamb", email = "jaylamb20@gmail.com"}
]
name = "pydistcheck"
readme = "README.md"
requires-python = ">=3.8"
dynamic = ["version"]

[tool.setuptools.dynamic]
version = {attr = "pydistcheck.__version__"}

[project.scripts]
pydistcheck = "pydistcheck.cli:check"

[project.optional-dependencies]
conda = [
    "zstandard>=0.22.0"
]

[project.urls]
homepage = "https://pydistcheck.readthedocs.io/en/latest/"
documentation = "https://pydistcheck.readthedocs.io/en/latest/"
repository = "https://github.com/jameslamb/pydistcheck"
changelog = "https://github.com/jameslamb/pydistcheck/releases"

[build-system]

requires = [
    "setuptools>=67",
]
build-backend = "setuptools.build_meta"

[tool.black]
line-length = 100

[tool.isort]
line_length = 100
profile = "black"

[tool.mypy]
exclude = 'docs/conf\.py$|build/*'
ignore_missing_imports = true
strict = true

[tool.ruff]
# this should be set to the oldest version of python the project supports
target-version = "py38"

[tool.ruff.lint]
ignore = [
    # (pycodestyle) Line too long
    "E501",
    # (pylint) Magic value used in comparison, consider replacing with a constant
    "PLR2004",
    # (flake8-bandit) subprocess call: check for execution of untrusted input
    "S603",
    # (flake8-simplify) use ternary operator instead of if-else
    "SIM108"
]
select = [
    # flake8-builtins
    "A",
    # flake8-bugbear
    "B",
    # flake8-comprehensions
    "C4",
    # pycodestyle
    "E",
    # eradicate
    "ERA",
    # pyflakes
    "F",
    # perflint
    "PERF",
    # pygrep-hooks
    "PGH",
    # pylint
    "PL",
    # flake8-pyi
    "PYI",
    # flake8-return
    "RET",
    # ruff-exclusive checks
    "RUF",
    # flake8-bandit
    "S",
    # flake8-simplify
    "SIM",
]

[tool.ruff.lint.per-file-ignores]
"src/pydistcheck/*.py" = [
    # uses of tarfile.extractall()
    "S202"
]
"src/pydistcheck/cli.py" = [
    # Too many branches
    "PLR0912",
    # Too many statements
    "PLR0915"
]
"tests/*" = [
    # (flake8-bugbear) Found useless expression
    "B018",
    # (flake8-bandit) use of assert detected
    "S101"
]
